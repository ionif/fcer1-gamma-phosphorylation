# A simple model
#

begin model
begin parameters
	# simulation parameters
	# fraction of a single cell to be considered in a stochastic simulation
	f 0.01 # [=] dimensionless, 0<f<=1
	
	# physical constants
	# Avogadro constant
	NA  6.02214e23 # [=] number of molecules per mol

	# Scenario 1: Cells are adherant and grown to confluence in a cell culture dish
	# volume of extracellular fluid per cell
	#   Assumptions:
	#    - 15 cm culture dishes (cells 95% confluent)
	#    - 1.2e5 cells per cm^2
	#    - growth surface area of 140 cm^2
	#    - 1.7e7 cells per dish
	#    - 0.25 mL of medium per square cm of growth surface
	#    - 35 mL of medium per dish
	Vecf 2.1e-9*f # [=] L per cell

	# ligand concentration
	EGF_conc_nM  1.0 # [=] nM
	# number of ligands per cell (derived)
	
	# Convert from nM to Molar
	EGF_conc = EGF_conc_nM * 1e-9 # M

	EGF_copy_number = EGF_conc*(NA*Vecf) # [=] number of molecules per cell

	# receptor copy number
	EGFR_copy_number  f*1.0e5 # [=] number of molecules per cell

	# binding parameters

	# a free ligand reversibly binds a free receptor site

	# equilibrium dissociation constant
	# KD1 is specified as being free. It has a matching option in the .conf file.
	KD1 KD1__FREE__ # [=] nM 
	
	# reverse rate constant (derived)
	#km1 is specified as being free. It has a matching option in the .conf file.
	km1 km1__FREE__ # [=] /s 
	
	# forward rate constant (derived)
	kp1_nMs=(km1/KD1) # [=] /nM/s
	kp1_Ms=kp1_nMs*1e9 # convert /nM/s to /M/s
	kp1=kp1_Ms/(NA*Vecf) # convert /M/s to /(molecule/cell)/s

	# receptor-receptor interaction
	# dimensionless equilibrium association constant
	# K2RT is specified as being free. It has a matching option in the .conf file.
	K2RT K2RT__FREE__ # [=] dimensionless
	#   a value of 0.1 => weak crosslinking
	#   a value of 1.0 => moderate crosslinking
	#   a value of 10.0 => strong crosslinking
	
	# reverse rate constant (derived)
	km2 km2__FREE__ # [=] /s
	
	# forward rate constant (derived)
	kp2=K2RT*km2/EGFR_copy_number # [=] /nM/s
	
	kp3=kp2*0.2

	# phosphorylation rate constant
	# kphos is specified as being free. It has a matching option in the .conf file.
	kphos kphos__FREE__ # [=] /s

	# dephosphorylation rate constant
	# kdephos is specified as being free. It has a matching option in the .conf file.
	kdephos kdephos__FREE__ # [=] /s

end parameters


begin molecule types
	# ligand
	L(r) 

	# receptor
	R(l,r,Y~0~P) 
end molecule types

#bound ligand and p

begin seed species
	L(r)  0
	R(l,r,Y~0)  EGFR_copy_number
end  seed species

begin observables

	# total number of ligands
	Molecules Ltot L()

	# number of free ligands
	Species freeL L(r) 
	
	# total number of receptors
	Molecules Rtot R()

	# number of bound ligands = Ltot - freeL

	# number of free receptors
	#Species freeR R(l,r) 

	# number of monomeric (unclustered) receptors
	#Species Rmon R==1 

	# number of receptor dimers
	Species Rdim R==2

	# number of ligand-induced receptor aggregates
	#   = number of receptor clusters
	#   = number of complexes containing more than 1 receptor 
	#Species n_agg_gt1 R>1

	# number of ligand-receptor bonds
	#   = number of ligand-occupied receptor sites
	#   = number of receptor-occupied ligand sites
	Molecules RLbonds L(r!1).R(l!1) # = R(l!+) = L(r!+)

	# number of receptors in clusters = Rtot - R1

	# average size of a receptor cluster (of size >1) 
	#   = (# of receptors in clusters)/n_agg_gt1
	#   = (Rtot - R1)/n_agg_gt1

	# number of phosphorylated receptors
	Molecules pR R(Y~P)

end observables

begin reaction rules

	# ligand capture
	#   a free ligand binds a receptor with a free site
	L(r)+R(l)<->L(r!1).R(l!1) kp1,km1

	# receptor dimerization
	R(l!+,r)+R(l!+,r)->R(l!+,r!1).R(l!+,r!1) kp2

	# receptor-receptor bond dissociation
	R(r!1).R(r!1)->R(r)+R(r) km2
	
	# receptor dimerization (no ligand)
	R(l,r) + R(l,r) -> R(l,r!1).R(l,r!1) kp3

	# dimer-mediated receptor phosphorylation
	R(r!+,Y~0)->R(r!+,Y~P) kphos

	# dephosphorylation
	R(Y~P)->R(Y~0) kdephos

end reaction rules


end model


# actions

# Simulate for 600 seconds to reach equilibrium
simulate({method=>"nf",t_start=>0,t_end=>600,n_steps=>1,suffix=>"equil",get_final_state=>1})

# Add ligand
setConcentration("L(r)","EGF_copy_number")

# Simulate for 60 seconds. This simulation output is fit to the data in example6.exp
simulate({method=>"nf",t_start=>0,t_end=>60,n_steps=>12,suffix=>"example6",get_final_state=>0})
